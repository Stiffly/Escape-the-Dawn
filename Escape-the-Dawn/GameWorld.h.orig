#ifndef GameWorld_h__
#define GameWorld_h__

#include "World.h"
#include "Renderer.h"

#include "Systems/CollisionSystem.h"
#include "Systems/InputSystem.h"
#include "Systems/LevelGenerationSystem.h"
#include "Systems/ParticleSystem.h"
#include "Systems/PlayerSystem.h"
#include "Systems/RenderSystem.h"
#include "Systems/SoundSystem.h"

#include "Components/Bounds.h"
#include "Components/Camera.h" 
#include "Components/Collision.h" 
#include "Components/DirectionalLight.h" 
#include "Components/Input.h" 
#include "Components/Model.h" 
#include "Components/ParticleEmitter.h" 
#include "Components/PointLight.h" 
#include "Components/PowerUp.h" 
#include "Components/SoundEmitter.h" 
#include "Components/Sprite.h" 
#include "Components/Stat.h" 
#include "Components/Template.h" 
#include "Components/Transform.h" 

class GameWorld : public World
{
public:
	GameWorld(std::shared_ptr<Renderer> renderer) 
		: m_Renderer(renderer), World() { }

	void Initialize();

	void RegisterSystems() override;
	void RegisterComponents() override;

	void Update(double dt) ;

private:
	std::shared_ptr<Renderer> m_Renderer;
<<<<<<< HEAD
	EntityID entcamera, player1, player2;
=======

	EntityID m_Player;
>>>>>>> 21b2e3bdc15ac8b21f027a7f531574f46187ae80
};

#endif // GameWorld_h__
